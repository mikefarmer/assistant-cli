name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go-version: [1.23.x]
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: |
        go mod download
        go mod verify

    - name: Run tests
      run: |
        go test -v -race -coverprofile=coverage.out ./...

    - name: Generate coverage report
      run: |
        go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage reports
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          coverage.out
          coverage.html

    - name: Check coverage threshold
      if: matrix.os == 'ubuntu-latest'
      run: |
        COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
        echo "Coverage: $COVERAGE%"
        if (( $(echo "$COVERAGE < 40" | bc -l) )); then
          echo "Coverage $COVERAGE% is below minimum threshold of 40%"
          exit 1
        fi

    - name: Run linter
      if: matrix.os == 'ubuntu-latest'
      uses: golangci/golangci-lint-action@v4
      with:
        version: latest
        args: --timeout=5m

    - name: Build binary
      run: |
        go build -ldflags "-X github.com/mikefarmer/assistant-cli/cmd.version=ci-${{ github.sha }}" -o assistant-cli main.go

    - name: Test CLI help command
      run: |
        ./assistant-cli --help
        ./assistant-cli login --help
        ./assistant-cli synthesize --help
        ./assistant-cli config --help